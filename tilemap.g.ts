// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile17 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . 2 . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.swamp.swampTile1,sprites.dungeon.darkGroundCenter,sprites.dungeon.hazardLava1,sprites.builtin.field0,sprites.dungeon.buttonOrange,sprites.dungeon.buttonTeal,sprites.dungeon.buttonPink,sprites.swamp.swampTile2,sprites.dungeon.buttonTealDepressed], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 2 2 2 . . . . . . . . . 
. . . 2 . . 2 . . . . . . . . . 
. . . 2 2 2 2 . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.builtin.field0,sprites.dungeon.hazardLava1,sprites.dungeon.darkGroundNorthWest1,sprites.swamp.swampTile1,sprites.dungeon.buttonTeal,sprites.dungeon.buttonOrange,sprites.dungeon.buttonPinkDepressed], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.swamp.swampTile1,sprites.builtin.field0,sprites.dungeon.hazardLava1,sprites.dungeon.buttonOrange,sprites.dungeon.buttonTeal,sprites.dungeon.buttonPinkDepressed,sprites.dungeon.buttonTealDepressed,sprites.dungeon.darkGroundNorthWest1], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex`1000100000000007000000000000000000000000000002070000000000000000000000000000030700000000000000000000000000000407000000000000000000000000000002070000000000000000000000000000030700000000000000000000000000000407000000000000000000000000000002070909090900000000000000000000030709090909090000000000000000000407090909090909000000000000000002070909090909000000000000000000050709090909000000000000000000000608080808080808080808080808010101080808080808080808080808080101010808080808080808080808080b0101010808080808080808080808080a`, img`
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 . . . . . . . . . . . . 
. . . 2 2 . 2 2 2 2 2 2 2 2 2 2 
. . . 2 2 . . . . . . . . . . 2 
. . . 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 . . 
`, [myTiles.transparency16,sprites.dungeon.hazardLava1,sprites.dungeon.buttonOrange,sprites.dungeon.buttonTeal,sprites.dungeon.buttonPink,sprites.dungeon.buttonTealDepressed,sprites.dungeon.buttonPinkDepressed,sprites.builtin.field0,sprites.dungeon.darkGroundNorthWest1,sprites.swamp.swampTile1,myTiles.tile1,myTiles.tile2], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile8,myTiles.tile9,myTiles.tile10,myTiles.tile11], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 . . 2 2 2 2 2 . 
. . . . . . . 2 . . 2 . . . . . 
2 . 2 2 2 2 . 2 2 2 2 . 2 2 2 2 
2 . 2 2 . . . . . . . . 2 . . . 
2 . 2 2 2 2 2 2 2 2 2 . 2 . 2 2 
2 . 2 . . . . . . . 2 . 2 . 2 . 
2 . 2 . 2 2 2 2 2 . 2 . . . 2 . 
2 . 2 . 2 . . . 2 . 2 2 2 2 2 . 
2 . 2 . 2 . . . 2 . . . . . . . 
2 . 2 . 2 . 2 . 2 2 2 2 2 2 2 . 
2 . 2 . 2 . 2 . . . . . . . 2 . 
2 . 2 2 2 . 2 . 2 . . . . . 2 . 
. . . . . . 2 . 2 2 2 2 . . 2 . 
. 2 2 2 2 2 2 . . . . 2 2 2 2 . 
. . . . 2 2 2 2 2 2 . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.stairLadder,myTiles.tile3,myTiles.tile4], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. 2 . . . . . 2 . 2 . 2 . 2 2 . 
. 2 . 2 2 2 . 2 . 2 . 2 . 2 2 . 
. 2 . 2 . . . 2 . 2 . 2 . 2 2 . 
. 2 . 2 . . . . . . . . . . . . 
. 2 . 2 2 2 2 2 2 2 2 2 2 2 2 . 
. 2 . . . . . . . . . . . . 2 . 
. 2 2 2 . 2 2 . 2 2 . 2 2 2 2 . 
2 2 . . . 2 2 . 2 2 . 2 2 2 . . 
. . . 2 2 2 2 2 2 . . 2 . . 2 . 
. . . 2 . 2 2 . 2 . . 2 . . 2 . 
. 2 2 2 . 2 2 . 2 . . 2 . 2 . . 
. 2 . . . 2 2 . 2 . . 2 . 2 . . 
. 2 . 2 . 2 2 . 2 . 2 2 . . 2 . 
. 2 . 2 . 2 2 . 2 . . . . . 2 . 
. . . 2 . . . . 2 . . . . . 2 . 
2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 . 
`, [myTiles.transparency16,myTiles.tile5,sprites.swamp.swampTile19], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
.................................2................
.................................2222.............
......................................2222........
........222...22...2222.....222............222....
.......................................222........
...222.......222.........2222.....................
22.................2222............2222...........
..................................................
`, [myTiles.transparency16,myTiles.tile12,myTiles.tile13], TileScale.Sixteen);
            case "level11":
            case "level11":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level12":
            case "level12":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level13":
            case "level13":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "Door part 1":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile":
            case "tile3":return tile3;
            case "myTile1":
            case "tile4":return tile4;
            case "myTile2":
            case "tile5":return tile5;
            case "myTile3":
            case "tile6":return tile6;
            case "myTile4":
            case "tile7":return tile7;
            case "myTile5":
            case "tile8":return tile8;
            case "myTile6":
            case "tile9":return tile9;
            case "myTile7":
            case "tile10":return tile10;
            case "myTile8":
            case "tile11":return tile11;
            case "myTile9":
            case "tile12":return tile12;
            case "myTile11":
            case "tile14":return tile14;
            case "myTile10":
            case "tile13":return tile13;
            case "myTile12":
            case "tile15":return tile15;
            case "myTile13":
            case "tile16":return tile16;
            case "myTile14":
            case "tile17":return tile17;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
